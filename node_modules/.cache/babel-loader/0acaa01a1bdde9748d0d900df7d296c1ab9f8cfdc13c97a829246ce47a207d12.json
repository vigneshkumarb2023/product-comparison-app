{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vigne\\\\OneDrive\\\\Desktop\\\\projectspring\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in (from localStorage)\n    const savedUser = authService.getCurrentUser();\n    if (savedUser && authService.isAuthenticated()) {\n      setUser(savedUser);\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const userData = await authService.login(email, password);\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (firstName, lastName, email, password) => {\n    try {\n      const userData = await authService.register(firstName, lastName, email, password);\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","savedUser","getCurrentUser","isAuthenticated","login","email","password","userData","error","register","firstName","lastName","logout","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vigne/OneDrive/Desktop/projectspring/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in (from localStorage)\n    const savedUser = authService.getCurrentUser();\n    if (savedUser && authService.isAuthenticated()) {\n      setUser(savedUser);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const userData = await authService.login(email, password);\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (firstName, lastName, email, password) => {\n    try {\n      const userData = await authService.register(firstName, lastName, email, password);\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n    isLoading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAGf,WAAW,CAACgB,cAAc,CAAC,CAAC;IAC9C,IAAID,SAAS,IAAIf,WAAW,CAACiB,eAAe,CAAC,CAAC,EAAE;MAC9CL,OAAO,CAACG,SAAS,CAAC;IACpB;IACAD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACkB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACzDR,OAAO,CAACS,QAAQ,CAAC;MACjB,OAAOA,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,EAAEN,KAAK,EAAEC,QAAQ,KAAK;IAC/D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACuB,QAAQ,CAACC,SAAS,EAAEC,QAAQ,EAAEN,KAAK,EAAEC,QAAQ,CAAC;MACjFR,OAAO,CAACS,QAAQ,CAAC;MACjB,OAAOA,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM1B,WAAW,CAAC0B,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRV,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EAED,MAAMgB,KAAK,GAAG;IACZjB,IAAI;IACJO,KAAK;IACLK,QAAQ;IACRG,MAAM;IACNT,eAAe,EAAE,CAAC,CAACN,IAAI;IACvBE;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CAzDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}