{"ast":null,"code":"import api from './api';\nconst productService = {\n  // Get all products\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw new Error('Failed to fetch products');\n    }\n  },\n  // Get product by ID\n  getProductById: async id => {\n    try {\n      const response = await api.get(`/products/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      throw new Error('Failed to fetch product');\n    }\n  },\n  // Get products by category\n  getProductsByCategory: async category => {\n    try {\n      const response = await api.get(`/products/category/${category}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products by category:', error);\n      throw new Error('Failed to fetch products by category');\n    }\n  },\n  // Search products by name\n  searchProducts: async name => {\n    try {\n      const response = await api.get(`/products/search?name=${encodeURIComponent(name)}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error searching products:', error);\n      throw new Error('Failed to search products');\n    }\n  },\n  // Get products by price range\n  getProductsByPriceRange: async (minPrice, maxPrice) => {\n    try {\n      const response = await api.get(`/products/price-range?minPrice=${minPrice}&maxPrice=${maxPrice}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products by price range:', error);\n      throw new Error('Failed to fetch products by price range');\n    }\n  },\n  // Get all categories\n  getAllCategories: async () => {\n    try {\n      const response = await api.get('/products/categories');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw new Error('Failed to fetch categories');\n    }\n  },\n  // Create new product (admin only)\n  createProduct: async productData => {\n    try {\n      const response = await api.post('/products', productData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating product:', error);\n      throw new Error('Failed to create product');\n    }\n  },\n  // Update product (admin only)\n  updateProduct: async (id, productData) => {\n    try {\n      const response = await api.put(`/products/${id}`, productData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating product:', error);\n      throw new Error('Failed to update product');\n    }\n  },\n  // Delete product (admin only)\n  deleteProduct: async id => {\n    try {\n      const response = await api.delete(`/products/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      throw new Error('Failed to delete product');\n    }\n  }\n};\nexport default productService;","map":{"version":3,"names":["api","productService","getAllProducts","response","get","data","error","console","Error","getProductById","id","getProductsByCategory","category","searchProducts","name","encodeURIComponent","getProductsByPriceRange","minPrice","maxPrice","getAllCategories","createProduct","productData","post","updateProduct","put","deleteProduct","delete"],"sources":["C:/Users/vigne/OneDrive/Desktop/projectspring/src/services/productService.js"],"sourcesContent":["import api from './api';\n\nconst productService = {\n  // Get all products\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw new Error('Failed to fetch products');\n    }\n  },\n\n  // Get product by ID\n  getProductById: async (id) => {\n    try {\n      const response = await api.get(`/products/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      throw new Error('Failed to fetch product');\n    }\n  },\n\n  // Get products by category\n  getProductsByCategory: async (category) => {\n    try {\n      const response = await api.get(`/products/category/${category}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products by category:', error);\n      throw new Error('Failed to fetch products by category');\n    }\n  },\n\n  // Search products by name\n  searchProducts: async (name) => {\n    try {\n      const response = await api.get(`/products/search?name=${encodeURIComponent(name)}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error searching products:', error);\n      throw new Error('Failed to search products');\n    }\n  },\n\n  // Get products by price range\n  getProductsByPriceRange: async (minPrice, maxPrice) => {\n    try {\n      const response = await api.get(`/products/price-range?minPrice=${minPrice}&maxPrice=${maxPrice}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products by price range:', error);\n      throw new Error('Failed to fetch products by price range');\n    }\n  },\n\n  // Get all categories\n  getAllCategories: async () => {\n    try {\n      const response = await api.get('/products/categories');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw new Error('Failed to fetch categories');\n    }\n  },\n\n  // Create new product (admin only)\n  createProduct: async (productData) => {\n    try {\n      const response = await api.post('/products', productData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating product:', error);\n      throw new Error('Failed to create product');\n    }\n  },\n\n  // Update product (admin only)\n  updateProduct: async (id, productData) => {\n    try {\n      const response = await api.put(`/products/${id}`, productData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating product:', error);\n      throw new Error('Failed to update product');\n    }\n  },\n\n  // Delete product (admin only)\n  deleteProduct: async (id) => {\n    try {\n      const response = await api.delete(`/products/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      throw new Error('Failed to delete product');\n    }\n  }\n};\n\nexport default productService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}