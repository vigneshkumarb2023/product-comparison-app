{"ast":null,"code":"import api from './api';\nconst authService = {\n  // Login user\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/signin', {\n        email,\n        password\n      });\n      if (response.data.token) {\n        const userData = {\n          token: response.data.token,\n          email: response.data.email,\n          name: response.data.name,\n          id: response.data.id,\n          roles: response.data.roles\n        };\n        localStorage.setItem('user', JSON.stringify(userData));\n        return userData;\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    }\n  },\n  // Register user\n  register: async (firstName, lastName, email, password) => {\n    try {\n      const response = await api.post('/auth/signup', {\n        firstName,\n        lastName,\n        email,\n        password\n      });\n\n      // After successful registration, automatically log in\n      if (response.data.message === 'User registered successfully!') {\n        return await authService.login(email, password);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  },\n  // Logout user\n  logout: async () => {\n    try {\n      await api.post('/auth/signout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('user');\n    }\n  },\n  // Get current user from localStorage\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    const user = authService.getCurrentUser();\n    return user && user.token;\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","token","userData","name","id","roles","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","Error","message","register","firstName","lastName","_error$response2","_error$response2$data","logout","console","removeItem","getCurrentUser","user","getItem","parse","isAuthenticated"],"sources":["C:/Users/vigne/OneDrive/Desktop/projectspring/src/services/authService.js"],"sourcesContent":["import api from './api';\n\nconst authService = {\n  // Login user\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/signin', {\n        email,\n        password\n      });\n      \n      if (response.data.token) {\n        const userData = {\n          token: response.data.token,\n          email: response.data.email,\n          name: response.data.name,\n          id: response.data.id,\n          roles: response.data.roles\n        };\n        localStorage.setItem('user', JSON.stringify(userData));\n        return userData;\n      }\n      \n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  },\n\n  // Register user\n  register: async (firstName, lastName, email, password) => {\n    try {\n      const response = await api.post('/auth/signup', {\n        firstName,\n        lastName,\n        email,\n        password\n      });\n      \n      // After successful registration, automatically log in\n      if (response.data.message === 'User registered successfully!') {\n        return await authService.login(email, password);\n      }\n      \n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  },\n\n  // Logout user\n  logout: async () => {\n    try {\n      await api.post('/auth/signout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('user');\n    }\n  },\n\n  // Get current user from localStorage\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    const user = authService.getCurrentUser();\n    return user && user.token;\n  }\n};\n\nexport default authService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}